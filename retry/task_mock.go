// Code generated by MockGen. DO NOT EDIT.
// Source: task.go

// Package retry is a generated GoMock package.
package retry

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockITask is a mock of ITask interface.
type MockITask struct {
	ctrl     *gomock.Controller
	recorder *MockITaskMockRecorder
}

// MockITaskMockRecorder is the mock recorder for MockITask.
type MockITaskMockRecorder struct {
	mock *MockITask
}

// NewMockITask creates a new mock instance.
func NewMockITask(ctrl *gomock.Controller) *MockITask {
	mock := &MockITask{ctrl: ctrl}
	mock.recorder = &MockITaskMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITask) EXPECT() *MockITaskMockRecorder {
	return m.recorder
}

// Exec mocks base method.
func (m *MockITask) Exec() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Exec")
	ret0, _ := ret[0].(error)
	return ret0
}

// Exec indicates an expected call of Exec.
func (mr *MockITaskMockRecorder) Exec() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Exec", reflect.TypeOf((*MockITask)(nil).Exec))
}
